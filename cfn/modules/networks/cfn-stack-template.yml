AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OrganizationName:
    Type: String
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  PrivateCidrA:
    Type: String
  PrivateCidrC:
    Type: String
  PrivateCidrD:
    Type: String
  ProtectCidrA:
    Type: String
  ProtectCidrC:
    Type: String
  ProtectCidrD:
    Type: String
  PublicCidrA:
    Type: String
  PublicCidrC:
    Type: String
  PublicCidrD:
    Type: String
  VpcCidrBlock:
    Type: String

Resources:
  Certificate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./certificate.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId

  IAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: iam.yml
      Parameters:
        OrganizationName: !Ref OrganizationName

  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./vpc.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        VpcCidrBlock: !Ref VpcCidrBlock

  Subnet:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./subnet.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        PrivateCidrA: !Ref PrivateCidrA
        PrivateCidrC: !Ref PrivateCidrC
        PrivateCidrD: !Ref PrivateCidrD
        ProtectCidrA: !Ref ProtectCidrA
        ProtectCidrC: !Ref ProtectCidrC
        ProtectCidrD: !Ref ProtectCidrD
        PublicCidrA: !Ref PublicCidrA
        PublicCidrC: !Ref PublicCidrC
        PublicCidrD: !Ref PublicCidrD
        VpcId: !GetAtt [Vpc, Outputs.VpcId]

  Gateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./gateway.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        PublicSubnetA: !GetAtt [Subnet, Outputs.PublicSubnetA]
        PublicSubnetC: !GetAtt [Subnet, Outputs.PublicSubnetC]
        PublicSubnetD: !GetAtt [Subnet, Outputs.PublicSubnetD]
        VpcId: !GetAtt [Vpc, Outputs.VpcId]

  Route:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./route.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        GatewayId: !GetAtt [Gateway, Outputs.InternetGateway]
        NatGatewayA: !GetAtt [Gateway, Outputs.NatGatewayA]
        NatGatewayC: !GetAtt [Gateway, Outputs.NatGatewayC]
        NatGatewayD: !GetAtt [Gateway, Outputs.NatGatewayD]
        PrivateSubnetA: !GetAtt [Subnet, Outputs.PrivateSubnetA]
        PrivateSubnetC: !GetAtt [Subnet, Outputs.PrivateSubnetC]
        PrivateSubnetD: !GetAtt [Subnet, Outputs.PrivateSubnetD]
        ProtectSubnetA: !GetAtt [Subnet, Outputs.ProtectSubnetA]
        ProtectSubnetC: !GetAtt [Subnet, Outputs.ProtectSubnetC]
        ProtectSubnetD: !GetAtt [Subnet, Outputs.ProtectSubnetD]
        PublicSubnetA: !GetAtt [Subnet, Outputs.PublicSubnetA]
        PublicSubnetC: !GetAtt [Subnet, Outputs.PublicSubnetC]
        PublicSubnetD: !GetAtt [Subnet, Outputs.PublicSubnetD]
        VpcId: !GetAtt [Vpc, Outputs.VpcId]

  ElasticLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./elb.yml
      Parameters:
        OrganizationName: !Ref OrganizationName
        CertificateArn: !GetAtt [Certificate, Outputs.CertificateArn]
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        PublicSubnets: !Join [',', [!GetAtt [Subnet, Outputs.PublicSubnetA], !GetAtt [Subnet, Outputs.PublicSubnetC], !GetAtt [Subnet, Outputs.PublicSubnetD]]]
        SecurityGroups: !Join [',', [!GetAtt [Vpc, Outputs.SecurityGroupPublic], !GetAtt [Vpc, Outputs.SecurityGroup]]]
    DependsOn:
      - Gateway
