AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OrganizationName:
    Type: String
  CertificateArn:
    Type: String
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>

Resources:
  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        DNSName: !Sub "dualstack.${LoadBalancer.DNSName}"
        EvaluateTargetHealth: true
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${OrganizationName}-alb
      Scheme: internet-facing
      Subnets: !Ref PublicSubnets
      Type: application
      SecurityGroups: !Ref SecurityGroups
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 300

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 503
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn

Outputs:
  HttpListenerArn:
    Value: !Ref HttpListener
    Export:
      Name: !Sub ${OrganizationName}:HttpListenerArn

  HttpsListenerArn:
    Value: !Ref HttpsListener
    Export:
      Name: !Sub ${OrganizationName}:HttpsListenerArn
