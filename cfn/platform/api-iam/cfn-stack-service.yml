AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OrganizationName:
    Type: String
  ProductName:
    Type: String
  ProjectName:
    Type: String
  AllowEcsPolicy:
    Type: CommaDelimitedList
  ContainerName:
    Type: String
  ContainerPort:
    Type: Number
  DesiredCount:
    Type: Number
  TaskCpu:
    Type: Number
  TaskMemory:
    Type: Number

Resources:
  IamRoles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/ecs/iam.yml
      Parameters:
        ProjectName: !Ref ProjectName
        AllowEcsPolicy: !Join [',', !Ref AllowEcsPolicy]

  Repository:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/ecs/repository.yml
      Parameters:
        ProjectName: !Ref ProjectName

  VirtualGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/ecs/mesh/virtual-gateway.yml
      Parameters:
        ProjectName: !Sub ${ProjectName}-gw
        ClusterArn: { 'Fn::ImportValue': !Sub "${ProductName}:ClusterArn" }
        DesiredCount: 1
        EcsTaskExecutionRoleArn: !GetAtt [IamRoles, Outputs.EcsTaskExecutionRole]
        EcsTaskRoleArn: !GetAtt [IamRoles, Outputs.EcsTaskRoleArn]
        LogGroup: !GetAtt [Repository, Outputs.LogGroup]
        MeshName: { 'Fn::ImportValue': !Sub "${ProductName}:ServiceMesh" }
        NamespaceId: { 'Fn::ImportValue': !Sub "${ProductName}:ServiceDiscoveryId" }
        ProtectSubnets: !Join [',', [{ 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetA"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetC"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetD"}]]
        SecurityGroups: { 'Fn::ImportValue': !Sub "${ProductName}:SecurityGroup" }
        VirtualServiceName: !GetAtt [VirtualService, Outputs.VirtualServiceName]

  VirtualService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/mesh/virtual-services.yml
      Parameters:
        ProjectName: !Ref ProjectName
        ContainerPort: !Ref ContainerPort
        MeshName: { 'Fn::ImportValue': !Sub "${ProductName}:ServiceMesh" }
        PrivateNamespace: { 'Fn::ImportValue': !Sub "${ProductName}:PrivateNamespace" }

  TaskDefinitions:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./.task-definitions.yml
      Parameters:
        ProjectName: !Ref ProjectName
        ContainerName: !Ref ContainerName
        ContainerPort: !Ref ContainerPort
        EcsTaskExecutionRoleArn: !GetAtt [IamRoles, Outputs.EcsTaskExecutionRole]
        EcsTaskRoleArn: !GetAtt [IamRoles, Outputs.EcsTaskRoleArn]
        LogGroup: !GetAtt [Repository, Outputs.LogGroup]
        RepositoryURI: !GetAtt [Repository, Outputs.RepositoryURI]
        TaskCpu: !Ref TaskCpu
        TaskMemory: !Ref TaskMemory
        VirtualNodeName: !GetAtt [VirtualService, Outputs.VirtualNodeName]
        VirtualNodeArn: !GetAtt [VirtualService, Outputs.VirtualNodeArn]

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/ecs/services/internal.yml
      Parameters:
        ProjectName: !Ref ProjectName
        ClusterArn: { 'Fn::ImportValue': !Sub "${ProductName}:ClusterArn" }
        DesiredCount: !Ref DesiredCount
        ProtectSubnets: !Join [',', [{ 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetA"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetC"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:ProtectSubnetD"}]]
        SecurityGroups: { 'Fn::ImportValue': !Sub "${ProductName}:SecurityGroup" }
        TaskDefinitionArn: !GetAtt [TaskDefinitions, Outputs.TaskDefinitionArn]
