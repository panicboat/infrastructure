AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OrganizationName:
    Type: String
  ProductName:
    Type: String
  CallbackURLs:
    Type: String
  DomainName:
    Type: String
  PrivateNamespace:
    Type: String

Resources:
  Certificates:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./certificate.yml
      Parameters:
        DomainName: !Ref DomainName

  Cognito:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cognito.yml
      Parameters:
        ProductName: !Ref ProductName
        CallbackURLs: !Ref CallbackURLs
        CertificateArn: !GetAtt [Certificates, Outputs.CertificateArn]
        DomainName: !Ref DomainName

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./security-groups.yml
      Parameters:
        ProductName: !Ref ProductName
        VpcId: { 'Fn::ImportValue': !Sub "${OrganizationName}:VpcId" }

  Ecs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../modules/ecs.yml
      Parameters:
        ProductName: !Ref ProductName
        PrivateNamespace: !Ref PrivateNamespace
        VpcId: { 'Fn::ImportValue': !Sub "${OrganizationName}:VpcId" }

  AuroraServerless:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./rds.yml
      Parameters:
        ProductName: !Ref ProductName
        MasterUsername: !Ref OrganizationName
        PrivateSubnets: !Join [',', [{ 'Fn::ImportValue': !Sub "${OrganizationName}:PrivateSubnetA"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:PrivateSubnetC"}, { 'Fn::ImportValue': !Sub "${OrganizationName}:PrivateSubnetD"}]]
        SecurityGroups: !Join [',', [!GetAtt [SecurityGroups, Outputs.SecurityGroup]]]
